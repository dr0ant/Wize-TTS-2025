{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.1", "generated_at": "2025-01-26T00:45:36.565925Z", "invocation_id": "31d8b4b6-44f5-4590-803d-7c923ed12633", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-26T00:45:36.556818Z", "completed_at": "2025-01-26T00:45:36.561627Z"}, {"name": "execute", "started_at": "2025-01-26T00:45:36.561822Z", "completed_at": "2025-01-26T00:45:36.561833Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005599021911621094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.wize_tts_dbt.paragraphes", "compiled": true, "compiled_code": "\n\nWITH paragraphs_extracted AS (\n    SELECT\n        nc.note_name,\n        nc.content_id,\n        ROW_NUMBER() OVER (PARTITION BY nc.content_id ORDER BY position) AS paragrapge_order,\n        paragraph AS paragraphe_content,\n        position\n    FROM\n        wizetts.note_content AS nc,\n        LATERAL REGEXP_SPLIT_TO_TABLE(nc.content, E'\\n\\n') WITH ORDINALITY AS t(paragraph, position)\n)\nSELECT\n    note_name,\n    content_id,\n    paragrapge_order,\n    paragraphe_content,\n    position AS paragraph_position,\n    NOW() as update_date\nFROM paragraphs_extracted\nORDER BY content_id, paragraph_position", "relation_name": "\"wizecosm_NAS\".\"wizetts\".\"paragraphes\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-26T00:45:36.562963Z", "completed_at": "2025-01-26T00:45:36.564857Z"}, {"name": "execute", "started_at": "2025-01-26T00:45:36.565038Z", "completed_at": "2025-01-26T00:45:36.565041Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0024940967559814453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.wize_tts_dbt.cleaned_paragraphes", "compiled": true, "compiled_code": "\n\nWITH raw_text AS (\n    SELECT\n        note_name,\n        content_id,\n        paragrapge_order,\n        paragraphe_content\n    FROM \"wizecosm_NAS\".\"wizetts\".\"paragraphes\" -- This refers to the source table where paragraphs are stored\n),\ncleaned_text AS (\n    SELECT\n        note_name,\n        content_id,\n        paragrapge_order,\n        paragraphe_content,\n        \n        -- Remove curly quotes and replace with straight quotes\n        REPLACE(REPLACE(paragraphe_content, '\u201c', '\"'), '\u201d', '\"') AS content_step_1,\n\n        -- Replace nested quotes and ensure standard quote usage (for dialogue)\n        REPLACE(\n            REPLACE(REPLACE(REPLACE(paragraphe_content, '\u201c', '\"'), '\u201d', '\"'), '\"\"\"', '\u00ab'),\n            '\"\"\"', '\u00bb'\n        ) AS content_step_2,\n\n        -- Remove excessive asterisks or symbols like \"* * *\"\n        REPLACE(\n            REPLACE(\n                REPLACE(REPLACE(paragraphe_content, '\u201c', '\"'), '\u201d', '\"'),\n                '\"\"\"', '\u00ab'\n            ),\n            '* * *', ''\n        ) AS content_step_3,\n\n        -- Normalize ellipses (\"...\") by ensuring they are represented consistently\n        REPLACE(\n            REPLACE(\n                REPLACE(\n                    REPLACE(paragraphe_content, '\u201c', '\"'), '\u201d', '\"'\n                ),\n                '\"\"\"', '\u00ab'\n            ),\n            '...', '...'\n        ) AS content_step_4,\n\n        -- Remove unnecessary spaces between words or after punctuation\n        REGEXP_REPLACE(\n            REPLACE(\n                REPLACE(\n                    REPLACE(REPLACE(paragraphe_content, '\u201c', '\"'), '\u201d', '\"'),\n                    '\"\"\"', '\u00ab'\n                ),\n                '...', '...'\n            ),\n            '\\\\s+', ' ', 'g'\n        ) AS content_step_5,\n\n        -- Remove underscores\n        REPLACE(\n            REGEXP_REPLACE(\n                REPLACE(\n                    REPLACE(\n                        REPLACE(REPLACE(paragraphe_content, '\u201c', '\"'), '\u201d', '\"'),\n                        '\"\"\"', '\u00ab'\n                    ),\n                    '...', '...'\n                ),\n                '\\\\s+', ' ', 'g'\n            ),\n            '_', ''\n        ) AS content_step_6\n    FROM raw_text\n),\nfinal_cleaned_text AS (\n    SELECT\n        note_name,\n        content_id,\n        paragrapge_order,\n        paragraphe_content,\n        -- Use proper sentence segmentation, if needed. Example of handling sentence breaks\n        REGEXP_REPLACE(content_step_6, '(\\\\.|\\\\?|!)(\\\\s)', '\\\\1\\\\2') AS cleaned_content  -- Ensures punctuation is followed by space\n    FROM cleaned_text\n)\n\nSELECT\n    note_name,\n    content_id,\n    paragrapge_order,\n    cleaned_content AS content\nFROM final_cleaned_text", "relation_name": "\"wizecosm_NAS\".\"wizetts\".\"cleaned_paragraphes\"", "batch_results": null}], "elapsed_time": 0.14848923683166504, "args": {"cache_selected_only": false, "show_resource_report": false, "strict_mode": false, "which": "generate", "use_colors": true, "empty_catalog": false, "require_resource_names_without_spaces": false, "log_format": "default", "macro_debugging": false, "partial_parse": true, "partial_parse_file_diff": true, "vars": {}, "project_dir": "/Users/antoinelarcher/Library/CloudStorage/SynologyDrive-test/1 - Main/Wize-TTS-2025/wize_tts_dbt", "log_level": "info", "require_nested_cumulative_type_params": false, "use_colors_file": true, "quiet": false, "require_batched_execution_for_custom_microbatch_strategy": false, "version_check": true, "send_anonymous_usage_stats": true, "exclude": [], "print": true, "printer_width": 80, "warn_error_options": {"include": [], "exclude": []}, "defer": false, "indirect_selection": "eager", "state_modified_compare_more_unrendered_values": false, "compile": true, "log_file_max_bytes": 10485760, "introspect": true, "skip_nodes_if_on_run_start_fails": false, "log_format_file": "debug", "select": [], "static": false, "populate_cache": true, "profiles_dir": "/Users/antoinelarcher/.dbt", "state_modified_compare_vars": false, "favor_state": false, "source_freshness_run_project_hooks": false, "require_explicit_package_overrides_for_builtin_materializations": true, "require_yaml_configuration_for_mf_time_spines": false, "static_parser": true, "write_json": true, "log_level_file": "debug", "invocation_command": "dbt docs generate", "log_path": "/Users/antoinelarcher/Library/CloudStorage/SynologyDrive-test/1 - Main/Wize-TTS-2025/wize_tts_dbt/logs"}}